---
Account:
  tableName: tb_account
  columns:
    type: { type: enum, values: [free, small, pro, unlimited] }
    valid_until: { type: date }
    name: { type: string(100) }
    workingdays: { type: integer(20) }
  actAs:
    Timestampable: ~
    
User:
  tableName: tb_user
  columns:
    first_name: { type: string(255) }
    last_name: { type: string(255) }
    email: { type: string(255) }
    account_id: { type: integer(20) }
    username: { type: string(255), unique: true }
    password: { type: string(255) }
    administrator: { type: boolean }
    boss_mode: { type: boolean }
    locked: { type: boolean }
    deleted_at: { type: timestamp }
  relations:
    Account: { class: Account, foreignAlias: Users, local: account_id }
  actAs:
    Timestampable: ~

Role:
  tableName: tb_role
  columns:
    name: { type: string(255) }
    account_id: { type: integer(20) }
    deleted_at: { type: timestamp }
  relations:
    Account: { class: Account, foreignAlias: Roles, local: account_id }
    Credentials: { class: Credential, refClass: RoleCredential, foreignAlias: Roles }
  actAs:
    Timestampable: ~

Credential:
  tableName: tb_credential
  columns:
    name: { type: string(255) }
    group_name: { type: string(255) }
    sort_order: { type: integer(20) }

RoleCredential:
  tableName: tb_role_credential
  columns:
    role_id: { type: integer(20), primary: true }
    credential_id: { type: integer(20), primary: true }

TimeLogItem:
  tableName: tb_timelog_item
  columns:
    value: { type: double }
    itemdate: { type: date }
    type_id: { type: integer(20) }
    project_id: { type: integer(20) }
    user_id: { type: integer(20) }
    note: { type: clob }
  relations:
    TimeItemType: { class: TimeItemType, local: type_id }
    User: { class: User, local: user_id, foreignAlias: TimeLogItems }
    Project: { class: Project, local: project_id, foreignAlias: TimeLogItems }
  actAs:
    Timestampable: ~

MissingTimeItemEntry:
  tableName: tb_missing_time_entries
  columns:
    day: { type: date }
    user_id: { type: integer(20) }
    ignored_at: { type: timestamp }
  relations:
    User: { class: User, foreignAlias: MissingTimeItemEntries, local: user_id }

TimeItemType:
  tableName: tb_timeitem_type
  columns:
    name: { type: string(255) }
    default_item: { type: boolean }
    account_id: { type: integer(20) }
    deleted_at: { type: timestamp }
  relations:
    Account: { class: Account, foreignAlias: TimeItemTypes, local: account_id }
  actAs:
    Timestampable: ~

Project:
  tableName: tb_project
  columns:
    name: { type: string(255) }
    number: { type: string(100) }
    deactivated: { type: boolean }
    owner_id: { type: integer(20) }
    account_id: { type: integer(20) }
    deleted_at: { type: timestamp }
  relations:
    Owner: { class: User, foreignAlias: OwnedProjects, local: owner_id }
    AssignedUser: { class: User, refClass: ProjectUser, foreignAlias: Projects }
    Account: { class: Account, foreignAlias: Projects, local: account_id }
  actAs:
    Timestampable: ~
    
ProjectUser:
  tableName: tb_project_user
  columns:
    project_id: { type: integer(20) }
    user_id: { type: integer(20) }
    role_id: { type: integer(20) }
  relations:
    Project: { class: Project, foreignAlias: ProjectUsers, local: project_id }
    Role: { class: Role, foreignAlias: ProjectUsers, local: role_id }

Setting:
  tableName: tb_settings
  columns:
    user_id: { type: integer(20) }
    culture: { type: string(10) }
    reminder: { type: boolean }
    theme: { type: string(255), default: 'default' }
  relations:
    User: { class: User, local: user_id, foreignType: one }

Token:
  tableName: tb_token
  columns:
    user_id: { type: integer(20) }
    action:
      type: enum
      values: [autologin, recovery]
    value: { type: string(255) }
  relations:
    User: { foreignAlias: Tokens, class: User, local: user_id }
  actAs:
    Timestampable: ~