<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property integer $account_id
 * @property string $username
 * @property string $password
 * @property boolean $administrator
 * @property boolean $boss_mode
 * @property boolean $locked
 * @property timestamp $deleted_at
 * @property Account $Account
 * @property Doctrine_Collection $TimeLogItems
 * @property Doctrine_Collection $MissingTimeItemEntries
 * @property Doctrine_Collection $OwnedProjects
 * @property Doctrine_Collection $Projects
 * @property Setting $Setting
 * @property Doctrine_Collection $Tokens
 * 
 * @method string              getFirstName()              Returns the current record's "first_name" value
 * @method string              getLastName()               Returns the current record's "last_name" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method integer             getAccountId()              Returns the current record's "account_id" value
 * @method string              getUsername()               Returns the current record's "username" value
 * @method string              getPassword()               Returns the current record's "password" value
 * @method boolean             getAdministrator()          Returns the current record's "administrator" value
 * @method boolean             getBossMode()               Returns the current record's "boss_mode" value
 * @method boolean             getLocked()                 Returns the current record's "locked" value
 * @method timestamp           getDeletedAt()              Returns the current record's "deleted_at" value
 * @method Account             getAccount()                Returns the current record's "Account" value
 * @method Doctrine_Collection getTimeLogItems()           Returns the current record's "TimeLogItems" collection
 * @method Doctrine_Collection getMissingTimeItemEntries() Returns the current record's "MissingTimeItemEntries" collection
 * @method Doctrine_Collection getOwnedProjects()          Returns the current record's "OwnedProjects" collection
 * @method Doctrine_Collection getProjects()               Returns the current record's "Projects" collection
 * @method Setting             getSetting()                Returns the current record's "Setting" value
 * @method Doctrine_Collection getTokens()                 Returns the current record's "Tokens" collection
 * @method User                setFirstName()              Sets the current record's "first_name" value
 * @method User                setLastName()               Sets the current record's "last_name" value
 * @method User                setEmail()                  Sets the current record's "email" value
 * @method User                setAccountId()              Sets the current record's "account_id" value
 * @method User                setUsername()               Sets the current record's "username" value
 * @method User                setPassword()               Sets the current record's "password" value
 * @method User                setAdministrator()          Sets the current record's "administrator" value
 * @method User                setBossMode()               Sets the current record's "boss_mode" value
 * @method User                setLocked()                 Sets the current record's "locked" value
 * @method User                setDeletedAt()              Sets the current record's "deleted_at" value
 * @method User                setAccount()                Sets the current record's "Account" value
 * @method User                setTimeLogItems()           Sets the current record's "TimeLogItems" collection
 * @method User                setMissingTimeItemEntries() Sets the current record's "MissingTimeItemEntries" collection
 * @method User                setOwnedProjects()          Sets the current record's "OwnedProjects" collection
 * @method User                setProjects()               Sets the current record's "Projects" collection
 * @method User                setSetting()                Sets the current record's "Setting" value
 * @method User                setTokens()                 Sets the current record's "Tokens" collection
 * 
 * @package    timehive
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('account_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('administrator', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('boss_mode', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('locked', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('deleted_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasMany('TimeLogItem as TimeLogItems', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('MissingTimeItemEntry as MissingTimeItemEntries', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Project as OwnedProjects', array(
             'local' => 'id',
             'foreign' => 'owner_id'));

        $this->hasMany('Project as Projects', array(
             'refClass' => 'ProjectUser',
             'local' => 'user_id',
             'foreign' => 'project_id'));

        $this->hasOne('Setting', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Token as Tokens', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}